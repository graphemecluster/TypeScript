tests/cases/compiler/implementArrayInterface.ts(22,5): error TS2416: Property 'map' in type 'MyArray<T>' is not assignable to the same property in base type 'T[]'.
  Type '<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[]' is not assignable to type '<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[] & { [K in keyof this]: U; }'.
    Type 'U[]' is not assignable to type 'U[] & { [K in keyof this]: U; }'.
      Type 'U[]' is not assignable to type '{ [K in keyof this]: U; }'.


==== tests/cases/compiler/implementArrayInterface.ts (1 errors) ====
    declare class MyArray<T> implements Array<T> {
        toString(): string;
        toLocaleString(): string;
        concat<U extends T[]>(...items: U[]): T[];
        concat(...items: T[]): T[];
        join(separator?: string): string;
        pop(): T;
        push(...items: T[]): number;
        reverse(): T[];
        shift(): T;
        slice(start?: number, end?: number): T[];
        sort(compareFn?: (a: T, b: T) => number): this;
        splice(start: number): T[];
        splice(start: number, deleteCount: number, ...items: T[]): T[];
        unshift(...items: T[]): number;
    
        indexOf(searchElement: T, fromIndex?: number): number;
        lastIndexOf(searchElement: T, fromIndex?: number): number;
        every(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;
        some(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): boolean;
        forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;
        map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];
        ~~~
!!! error TS2416: Property 'map' in type 'MyArray<T>' is not assignable to the same property in base type 'T[]'.
!!! error TS2416:   Type '<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[]' is not assignable to type '<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[] & { [K in keyof this]: U; }'.
!!! error TS2416:     Type 'U[]' is not assignable to type 'U[] & { [K in keyof this]: U; }'.
!!! error TS2416:       Type 'U[]' is not assignable to type '{ [K in keyof this]: U; }'.
        filter(callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any): T[];
        reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue?: T): T;
        reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;
        reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue?: T): T;
        reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;
    
        length: number;
    
        [n: number]: T;
    }
    